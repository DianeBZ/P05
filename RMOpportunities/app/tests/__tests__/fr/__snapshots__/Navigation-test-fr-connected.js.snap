// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        Object {
          "borderWidth": 0,
          "left": -3,
          "paddingLeft": 3,
          "position": "absolute",
          "top": 0,
        },
        Object {
          "height": 1334,
          "width": 753,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <View
        onMoveShouldSetResponder={[Function]}
        onMoveShouldSetResponderCapture={[Function]}
        onResponderEnd={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderReject={[Function]}
        onResponderRelease={[Function]}
        onResponderStart={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        onTouchStart={[Function]}
        style={
          Object {
            "backgroundColor": "transparent",
            "flex": 1,
            "overflow": "hidden",
          }
        }
      >
        <View
          collapsable={false}
          onStartShouldSetResponderCapture={[Function]}
          pointerEvents="auto"
          style={
            Array [
              Object {
                "bottom": 0,
                "left": 0,
                "overflow": "hidden",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "transform": Array [
                  Object {
                    "translateX": 0,
                  },
                  Object {
                    "translateY": 0,
                  },
                  Object {
                    "scaleX": 1,
                  },
                  Object {
                    "scaleY": 1,
                  },
                  Object {
                    "rotate": "0deg",
                  },
                  Object {
                    "skewX": "0deg",
                  },
                  Object {
                    "skewY": "0deg",
                  },
                ],
              },
              null,
            ]
          }
        >
          <RCTScrollView>
            <View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#F5FCFF",
                    "flex": 1,
                    "flexDirection": "column",
                    "justifyContent": "center",
                  }
                }
              >
                <Image
                  source={1}
                  style={
                    Object {
                      "height": 1334,
                      "width": 750,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "alignSelf": "center",
                        "flexDirection": "column",
                        "flexGrow": 0,
                        "flexShrink": 0,
                        "height": 350,
                        "justifyContent": "center",
                      }
                    }
                  />
                  <View
                    style={
                      Object {
                        "flexDirection": "column",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignSelf": "center",
                          "height": 66.7,
                          "justifyContent": "center",
                          "width": 525,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "backgroundColor": "#FFFFFF",
                            "padding": 5,
                          }
                        }
                      >
                        <RCTPicker
                          items={
                            Array [
                              Object {
                                "label": "Toutes les catégories",
                                "textColor": undefined,
                                "value": "tlc",
                              },
                              Object {
                                "label": "Produits pour la cosmétique, les arômes et parfums",
                                "textColor": undefined,
                                "value": "Pcos",
                              },
                              Object {
                                "label": "Solvants",
                                "textColor": undefined,
                                "value": "sol",
                              },
                              Object {
                                "label": "Solvants regeneres",
                                "textColor": undefined,
                                "value": "sol_r",
                              },
                              Object {
                                "label": "Reactifs",
                                "textColor": undefined,
                                "value": "rea",
                              },
                              Object {
                                "label": "Catalyseurs",
                                "textColor": undefined,
                                "value": "cat",
                              },
                              Object {
                                "label": "Specialites chimiques",
                                "textColor": undefined,
                                "value": "spe",
                              },
                              Object {
                                "label": "Intermediaires",
                                "textColor": undefined,
                                "value": "int",
                              },
                              Object {
                                "label": "Intermediaires simples",
                                "textColor": undefined,
                                "value": "int_s",
                              },
                              Object {
                                "label": "Acides",
                                "textColor": undefined,
                                "value": "aci",
                              },
                              Object {
                                "label": "Bases",
                                "textColor": undefined,
                                "value": "bas",
                              },
                              Object {
                                "label": "Acides amines",
                                "textColor": undefined,
                                "value": "aci_a",
                              },
                              Object {
                                "label": "Vitamines",
                                "textColor": undefined,
                                "value": "vit",
                              },
                              Object {
                                "label": "Autres",
                                "textColor": undefined,
                                "value": "aut",
                              },
                            ]
                          }
                          onChange={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          selectedIndex={0}
                          style={
                            Array [
                              Object {
                                "height": 216,
                              },
                              undefined,
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      style={
                        Object {
                          "alignSelf": "center",
                          "flexDirection": "column",
                          "height": 93.38000000000001,
                          "justifyContent": "center",
                          "width": 525,
                        }
                      }
                    >
                      <TextInput
                        editable={true}
                        maxLength={40}
                        onChangeText={[Function]}
                        placeholder="trouver par nom, n° CAS"
                        style={
                          Object {
                            "backgroundColor": "#a9a9a9",
                          }
                        }
                      />
                    </View>
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "alignSelf": "center",
                          "flexDirection": "column",
                          "height": 66.7,
                          "justifyContent": "center",
                          "width": 525,
                        }
                      }
                    >
                      <View
                        accessibilityComponentType={undefined}
                        accessibilityLabel={undefined}
                        accessibilityTraits={undefined}
                        accessible={true}
                        hasTVPreferredFocus={undefined}
                        hitSlop={undefined}
                        isTVSelectable={true}
                        onLayout={undefined}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                            },
                            Object {
                              "backgroundColor": "#A4D04A",
                              "height": 66.7,
                              "justifyContent": "center",
                              "width": 525,
                            },
                          ]
                        }
                        testID={undefined}
                        tvParallaxProperties={undefined}
                      >
                        <Text
                          accessible={true}
                          allowFontScaling={true}
                          ellipsizeMode="tail"
                          style={
                            Object {
                              "color": "white",
                              "fontSize": 20,
                              "textAlign": "center",
                            }
                          }
                        >
                          Recherche
                        </Text>
                      </View>
                    </View>
                  </View>
                </Image>
              </View>
            </View>
          </RCTScrollView>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            Object {
              "height": 64,
            },
            Object {
              "backgroundColor": "#F2F2F2",
              "borderBottomColor": "#000000",
              "borderBottomWidth": 1,
              "height": 106.72,
              "width": 750,
            },
          ]
        }
      >
        <View
          pointerEvents="box-none"
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "height": 44,
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 20,
            }
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Image
              source={1}
              style={
                Object {
                  "height": 66.7,
                  "marginTop": 17,
                  "width": 450,
                }
              }
            />
          </View>
        </View>
        <View
          pointerEvents="box-none"
          style={
            Object {
              "backgroundColor": "transparent",
              "height": 44,
              "left": 0,
              "opacity": 1,
              "overflow": "hidden",
              "position": "absolute",
              "top": 20,
            }
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Image
              source={1}
              style={
                Object {
                  "height": 53.36,
                  "marginLeft": 15,
                  "marginTop": 15,
                  "width": 48.75,
                }
              }
            />
          </View>
        </View>
        <View
          pointerEvents="box-none"
          style={
            Object {
              "alignItems": "flex-end",
              "backgroundColor": "transparent",
              "height": 44,
              "opacity": 1,
              "overflow": "hidden",
              "position": "absolute",
              "right": 0,
              "top": 20,
            }
          }
        >
          <View>
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                  },
                  Object {
                    "height": 80.03999999999999,
                    "marginRight": 5,
                    "marginTop": 9,
                    "width": 82.5,
                  },
                ]
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <Image
                source={1}
                style={
                  Object {
                    "height": 60.03,
                    "width": 60,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      pointerEvents="none"
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          undefined,
        ]
      }
    />
  </View>
  <View
    elevation={0}
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        Object {
          "borderWidth": 0,
          "left": -603,
          "position": "absolute",
          "shadowColor": "#000000",
          "shadowOpacity": 0.8,
          "shadowRadius": 3,
          "top": 0,
        },
        Object {
          "height": 1334,
          "width": 600,
        },
      ]
    }
  >
    <RCTScrollView
      style={
        Object {
          "backgroundColor": "white",
        }
      }
    >
      <View>
        <View>
          <View
            style={
              Object {
                "borderTopColor": "#A4D04A",
                "borderTopWidth": 2,
                "marginBottom": 1,
                "marginLeft": 20,
                "marginRight": 20,
                "marginTop": 10,
              }
            }
          />
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#A4D04A",
                  "fontSize": 20,
                  "fontWeight": "bold",
                  "marginBottom": 1,
                  "marginTop": 2,
                  "textAlign": "center",
                }
              }
            >
              Mon Compte
            </Text>
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 15,
                  "margin": 2,
                  "textAlign": "left",
                }
              }
            >
              Voir mon compte
            </Text>
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 15,
                  "margin": 2,
                  "textAlign": "left",
                }
              }
            >
              Modifier mon mot de passe
            </Text>
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 15,
                  "margin": 2,
                  "textAlign": "left",
                }
              }
            >
              Mes alertes produits
            </Text>
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 15,
                  "margin": 2,
                  "textAlign": "left",
                }
              }
            >
              Mes annonces
            </Text>
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 15,
                  "margin": 2,
                  "textAlign": "left",
                }
              }
            >
              Mes négociations
            </Text>
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 15,
                  "margin": 2,
                  "textAlign": "left",
                }
              }
            >
              Mes mises en relation
            </Text>
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 15,
                  "margin": 2,
                  "textAlign": "left",
                }
              }
            >
              Mes factures
            </Text>
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 15,
                  "margin": 2,
                  "textAlign": "left",
                }
              }
            >
              Modification de votre compte
            </Text>
          </View>
          <View
            style={
              Object {
                "borderTopColor": "#A4D04A",
                "borderTopWidth": 2,
                "marginBottom": 1,
                "marginLeft": 20,
                "marginRight": 20,
                "marginTop": 10,
              }
            }
          />
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#A4D04A",
                  "fontSize": 20,
                  "fontWeight": "bold",
                  "marginBottom": 1,
                  "marginTop": 2,
                  "textAlign": "center",
                }
              }
            >
              Annonces
            </Text>
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 15,
                  "margin": 2,
                  "textAlign": "left",
                }
              }
            >
              Voir les offres
            </Text>
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 15,
                  "margin": 2,
                  "textAlign": "left",
                }
              }
            >
              Voir les demandes
            </Text>
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 15,
                  "margin": 2,
                  "textAlign": "left",
                }
              }
            >
              Ajouter une annonce
            </Text>
          </View>
          <View
            style={
              Object {
                "borderTopColor": "#A4D04A",
                "borderTopWidth": 2,
                "marginBottom": 1,
                "marginLeft": 20,
                "marginRight": 20,
                "marginTop": 10,
              }
            }
          />
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#A4D04A",
                "fontSize": 20,
                "fontWeight": "bold",
                "marginBottom": 1,
                "marginTop": 2,
                "textAlign": "center",
              }
            }
          >
            Conseils
          </Text>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 15,
                  "margin": 2,
                  "textAlign": "left",
                }
              }
            >
              Acheter
            </Text>
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 15,
                  "margin": 2,
                  "textAlign": "left",
                }
              }
            >
              Vendre
            </Text>
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 15,
                  "margin": 2,
                  "textAlign": "left",
                }
              }
            >
              Réutiliser
            </Text>
          </View>
          <View
            style={
              Object {
                "borderTopColor": "#A4D04A",
                "borderTopWidth": 2,
                "marginBottom": 1,
                "marginLeft": 20,
                "marginRight": 20,
                "marginTop": 10,
              }
            }
          />
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#A4D04A",
                "fontSize": 20,
                "fontWeight": "bold",
                "marginBottom": 1,
                "marginTop": 2,
                "textAlign": "center",
              }
            }
          >
            Découvrir
          </Text>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 15,
                  "margin": 2,
                  "textAlign": "left",
                }
              }
            >
              Notre manifeste
            </Text>
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 15,
                  "margin": 2,
                  "textAlign": "left",
                }
              }
            >
              Nos tarifs
            </Text>
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 15,
                  "margin": 2,
                  "textAlign": "left",
                }
              }
            >
              FAQ
            </Text>
          </View>
          <View
            style={
              Object {
                "borderTopColor": "#A4D04A",
                "borderTopWidth": 2,
                "marginBottom": 1,
                "marginLeft": 20,
                "marginRight": 20,
                "marginTop": 10,
              }
            }
          />
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#A4D04A",
                  "fontSize": 20,
                  "fontWeight": "bold",
                  "marginBottom": 1,
                  "marginTop": 2,
                  "textAlign": "center",
                }
              }
            >
              Langue
            </Text>
          </View>
          <View>
            <View
              style={undefined}
            >
              <RCTPicker
                items={
                  Array [
                    Object {
                      "label": "Français",
                      "textColor": undefined,
                      "value": "fr",
                    },
                    Object {
                      "label": "English",
                      "textColor": undefined,
                      "value": "en",
                    },
                  ]
                }
                onChange={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                selectedIndex={0}
                style={
                  Array [
                    Object {
                      "height": 216,
                    },
                    undefined,
                  ]
                }
              />
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
    <View
      pointerEvents="none"
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          undefined,
        ]
      }
    />
  </View>
</View>
`;
